@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /* CSS Custom Properties for consistent spacing and sizing */
  :root {
    /* Spacing Scale */
    --space-xs: 0.25rem;
    --space-sm: 0.5rem;
    --space-md: 1rem;
    --space-lg: 1.5rem;
    --space-xl: 2rem;
    --space-2xl: 3rem;
    --space-3xl: 4rem;
    
    /* Container Constraints */
    --container-xs: 480px;
    --container-sm: 640px;
    --container-md: 768px;
    --container-lg: 1024px;
    --container-xl: 1280px;
    --container-2xl: 1400px;
    --container-max: 1600px;
    
    /* Component Sizes */
    --card-min-width: 280px;
    --card-max-width: 400px;
    --card-aspect-ratio: 16/10;
    --stat-card-size: 280px;
    --game-card-width: 350px;
    --game-card-min-height: 220px;
    
    /* Grid Patterns */
    --grid-gap: 1.5rem;
    --grid-gap-sm: 1rem;
    --grid-gap-lg: 2rem;
  }

  html {
    scroll-behavior: smooth;
  }
  
  body {
    background-color: #121212;
    color: #ffffff;
    font-family: 'Poppins', system-ui, sans-serif;
    font-feature-settings: "rlig" 1, "calt" 1;
  }

  /* Prevent layout shifts with explicit dimensions */
  .loading-skeleton {
    width: 100%;
    height: 120px;
    background: linear-gradient(90deg, #2a2a2a 25%, #1a1a1a 50%, #2a2a2a 75%);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
  }

  @keyframes loading {
    0% { background-position: 200% 0; }
    100% { background-position: -200% 0; }
  }
}

@layer components {
  /* Responsive Container Pattern */
  .container-responsive {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--space-md);
    padding-right: var(--space-md);
  }

  /* Mobile First Breakpoints */
  @media (min-width: 640px) {
    .container-responsive {
      max-width: var(--container-sm);
      padding-left: var(--space-lg);
      padding-right: var(--space-lg);
    }
  }

  @media (min-width: 768px) {
    .container-responsive {
      max-width: var(--container-md);
    }
  }

  @media (min-width: 1024px) {
    .container-responsive {
      max-width: var(--container-lg);
      padding-left: var(--space-xl);
      padding-right: var(--space-xl);
    }
  }

  @media (min-width: 1280px) {
    .container-responsive {
      max-width: var(--container-xl);
    }
  }

  @media (min-width: 1536px) {
    .container-responsive {
      max-width: var(--container-2xl);
    }
  }

  /* Grid Layouts with Proper Constraints */
  .grid-responsive-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--card-min-width), 1fr));
    gap: var(--grid-gap);
    justify-items: center;
    max-width: var(--container-2xl);
    margin: 0 auto;
  }

  .grid-stat-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--stat-card-size), var(--stat-card-size)));
    gap: var(--grid-gap);
    justify-content: center;
    max-width: var(--container-2xl);
    margin: 0 auto;
  }

  .grid-game-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--game-card-width), var(--game-card-width)));
    gap: var(--grid-gap);
    justify-content: center;
    max-width: var(--container-2xl);
    margin: 0 auto;
  }

  /* Component Size Constraints */
  .card-constrained {
    width: 100%;
    min-width: var(--card-min-width);
    max-width: var(--card-max-width);
    aspect-ratio: var(--card-aspect-ratio);
  }

  .stat-card-constrained {
    width: var(--stat-card-size);
    height: var(--stat-card-size);
    min-width: var(--stat-card-size);
    max-width: var(--stat-card-size);
  }

  .game-card-constrained {
    width: var(--game-card-width);
    min-height: var(--game-card-min-height);
    min-width: var(--game-card-width);
    max-width: var(--game-card-width);
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }

  /* Remove problematic flex utilities */
  .flex-safe {
    display: flex;
    flex-wrap: wrap;
    gap: var(--grid-gap);
  }

  .flex-item-constrained {
    flex: 0 1 var(--card-min-width);
    min-width: var(--card-min-width);
    max-width: var(--card-max-width);
  }
}